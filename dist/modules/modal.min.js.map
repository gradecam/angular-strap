{"version":3,"sources":["modules/modal.js"],"names":["angular","placement","provider","templateUrl","this","defaults","template","contentTemplate","container","element","backdrop","keyboard","html","show","size","$get","forEach","requestAnimationFrame","bodyElement","backdropCount","dialogBaseZindex","validSizes","ModalFactory","config","$modal","scope","$emit","options","prefixEvent","isDefined","onShow","isFunction","onHide","toggle","hide","animation","backdropElement","modalElement","on","preventHideOnDialogMouseDown","unbindBackdropEvents","hideOnBackdropClick","off","preventEventDefault","bindKeyboardEvents","$onKeyUp","backdropMouseDown","evt","focus","target","currentTarget","preventDefault","destroyModalElement","modalScope","$isShown","$destroy","$element","$options","extend","key","promise","trustAsHtml","$scope","$new","$rootScope","$hide","$$postDigest","$id","id","attr","$show","$sce","position","top","left","right","bottom","prefixClass","css","compileData","init","data","destroy","parent","after","isElement","z-index","backdropBaseZindex","link","clonedElement","onBeforeShow","display","defaultPrevented","addClass","customClass","findElement","$animate","enter","minor","backdropAnimation","el","enterAnimateCallback","then","safeDigest","bindBackdropEvents","version","leave","leaveAnimateCallback","onBeforeHide","unbindKeyboardEvents","which","directive","$root","$$phase","$digest","restrict","query","document","querySelectorAll","lg","sm","$window","setTimeout","body","falseValueRegExp","test","bsKey","modalClass","$observe","charAt","newValue","oldValue","$eval","$watch","isObject","bsModal","modal","trigger","$on"],"mappings":"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","file":"modules/modal.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.modal', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$modal', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      customClass: '',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      templateUrl: 'modal/modal.tpl.html',\n      template: '',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true,\n      size: null\n    };\n\n    this.$get = function ($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\n\n      var forEach = angular.forEach;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n\n      var backdropCount = 0;\n      var dialogBaseZindex = 1050;\n      var backdropBaseZindex = 1040;\n\n      var validSizes = {\n        lg: 'modal-lg',\n        sm: 'modal-sm'\n      };\n\n      function ModalFactory (config) {\n\n        var $modal = {};\n\n        // Common vars\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        var promise = $modal.$promise = $bsCompiler.compile(options);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        if (!options.element && !options.container) {\n          options.container = 'body';\n        }\n\n        // Store $id to identify the triggering element in events\n        // give priority to options.id, otherwise, try to use\n        // element id if defined\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\n\n        // Support scope as string options\n        forEach(['title', 'content'], function (key) {\n          if (options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n\n        // Provide scope helpers\n        scope.$hide = function () {\n          scope.$$postDigest(function () {\n            $modal.hide();\n          });\n        };\n        scope.$show = function () {\n          scope.$$postDigest(function () {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function () {\n          scope.$$postDigest(function () {\n            $modal.toggle();\n          });\n        };\n        // Publish isShown as a protected var on scope\n        $modal.$isShown = scope.$isShown = false;\n\n        // Fetch, compile then initialize modal\n        var compileData;\n        var modalElement;\n        var backdropMouseDown = false;\n        var modalScope;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        backdropElement.css({position: 'fixed', top: '0px', left: '0px', bottom: '0px', right: '0px'});\n        promise.then(function (data) {\n          compileData = data;\n          $modal.init();\n        });\n\n        $modal.init = function () {\n\n          // Options: show\n          if (options.show) {\n            scope.$$postDigest(function () {\n              $modal.show();\n            });\n          }\n\n        };\n\n        $modal.destroy = function () {\n\n          // Remove element\n          destroyModalElement();\n\n          // remove backdrop element\n          if (backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n\n          // Destroy scope\n          scope.$destroy();\n        };\n\n        $modal.show = function () {\n          if ($modal.$isShown) return;\n\n          var parent;\n          var after;\n          if (angular.isElement(options.container)) {\n            parent = options.container;\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\n          } else {\n            if (options.container) {\n              parent = findElement(options.container);\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\n            } else {\n              parent = null;\n              after = options.element;\n            }\n          }\n\n          // destroy any existing modal elements\n          if (modalElement) destroyModalElement();\n\n          // create a new scope, so we can destroy it and all child scopes\n          // when destroying the modal element\n          modalScope = $modal.$scope.$new();\n          // Fetch a cloned element linked from template (noop callback is required)\n          modalElement = $modal.$element = compileData.link(modalScope, function (clonedElement, scope) {});\n\n          if (options.backdrop) {\n            // set z-index\n            modalElement.css({'z-index': dialogBaseZindex + (backdropCount * 20)});\n            backdropElement.css({'z-index': backdropBaseZindex + (backdropCount * 20)});\n\n            // increment number of backdrops\n            backdropCount++;\n          }\n\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($modal);\n          }\n\n          // Set the initial positioning.\n          modalElement.css({display: 'block'}).addClass(options.placement);\n\n          // Options: customClass\n          if (options.customClass) {\n            modalElement.addClass(options.customClass);\n          }\n\n          // Options: size\n          if (options.size && validSizes[options.size]) {\n            angular.element(findElement('.modal-dialog', modalElement[0])).addClass(validSizes[options.size]);\n          }\n\n          // Options: animation\n          if (options.animation) {\n            if (options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n\n          if (options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null);\n          }\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\n          }\n\n          $modal.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          // Focus once the enter-animation has started\n          // Weird PhantomJS bug hack\n          var el = modalElement[0];\n          requestAnimationFrame(function () {\n            el.focus();\n          });\n\n          bodyElement.addClass(options.prefixClass + '-open');\n          if (options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n\n          // Bind events\n          bindBackdropEvents();\n          bindKeyboardEvents();\n        };\n\n        function enterAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.show', $modal);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($modal);\n          }\n        }\n\n        $modal.hide = function () {\n          if (!$modal.$isShown) return;\n\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($modal);\n          }\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.leave(modalElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(modalElement).then(leaveAnimateCallback);\n          }\n\n          if (options.backdrop) {\n            // decrement number of backdrops\n            backdropCount--;\n            $animate.leave(backdropElement);\n          }\n          $modal.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n\n          // Unbind events\n          unbindBackdropEvents();\n          unbindKeyboardEvents();\n        };\n\n        function leaveAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.hide', $modal);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($modal);\n          }\n          bodyElement.removeClass(options.prefixClass + '-open');\n          if (options.animation) {\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n          }\n        }\n\n        $modal.toggle = function () {\n          if ($modal.$isShown) {\n            $modal.hide();\n          } else {\n            $modal.show();\n          }\n        };\n\n        $modal.focus = function () {\n          modalElement[0].focus();\n        };\n\n        // Protected methods\n\n        $modal.$onKeyUp = function (evt) {\n\n          if (evt.which === 27 && $modal.$isShown) {\n            $modal.hide();\n            evt.stopPropagation();\n          }\n\n        };\n\n        function bindBackdropEvents () {\n          if (options.backdrop) {\n            if (options.backdrop !== 'static') {\n              modalElement.on('mousedown', preventHideOnDialogMouseDown);\n              backdropElement.on('mousedown', preventHideOnDialogMouseDown);\n            }\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n            backdropElement.on('wheel', preventEventDefault);\n          }\n        }\n\n        function unbindBackdropEvents () {\n          if (options.backdrop) {\n            if (options.backdrop !== 'static') {\n              modalElement.off('mousedown', preventHideOnDialogMouseDown);\n              backdropElement.off('mousedown', preventHideOnDialogMouseDown);\n            }\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n            backdropElement.off('wheel', preventEventDefault);\n          }\n        }\n\n        function bindKeyboardEvents () {\n          if (options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        }\n\n        function unbindKeyboardEvents () {\n          if (options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        }\n\n        function preventHideOnDialogMouseDown(evt) {\n          if (evt.target === evt.currentTarget) {\n            backdropMouseDown = true;\n          }\n        }\n\n        // Private helpers\n\n        function hideOnBackdropClick (evt) {\n          if (evt.target !== evt.currentTarget) return;\n          if (options.backdrop === 'static') {\n            $modal.focus();\n          } else if (backdropMouseDown) {\n            $modal.hide();\n          }\n          backdropMouseDown = false;\n        }\n\n        function preventEventDefault (evt) {\n          evt.preventDefault();\n        }\n\n        function destroyModalElement () {\n          if ($modal.$isShown && modalElement !== null) {\n            // un-bind events\n            unbindBackdropEvents();\n            unbindKeyboardEvents();\n          }\n\n          if (modalScope) {\n            modalScope.$destroy();\n            modalScope = null;\n          }\n\n          if (modalElement) {\n            modalElement.remove();\n            modalElement = $modal.$element = null;\n          }\n        }\n\n        return $modal;\n\n      }\n\n      // Helper functions\n\n      function safeDigest (scope) {\n        /* eslint-disable no-unused-expressions */\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n        /* eslint-enable no-unused-expressions */\n      }\n\n      function findElement (query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      return ModalFactory;\n\n    };\n\n  })\n\n  .directive('bsModal', function ($window, $sce, $parse, $modal) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass', 'size'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Options: alias modalClass to customClass\n        if (options.modalClass) {\n          options.customClass = options.modalClass;\n        }\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['backdrop', 'keyboard', 'html', 'container'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsModal) {\n          scope.$watch(attr.bsModal, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n\n        // Initialize modal\n        var modal = $modal(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', modal.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}